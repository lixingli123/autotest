<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="autotest.com.bocom.dao.DataApplyElementValueMapper">
  <resultMap id="BaseResultMap" type="autotest.com.bocom.entity.DataApplyElementValue">
    <id column="ELEMENT_VALUE_ID" jdbcType="INTEGER" property="elementValueId" />
    <result column="TASK_ID" jdbcType="INTEGER" property="taskId" />
    <result column="ELEMENT_NAME" jdbcType="VARCHAR" property="elementName" />
    <result column="ELEMENT_DESC" jdbcType="VARCHAR" property="elementDesc" />
    <result column="ELEMENT_VALUE" jdbcType="VARCHAR" property="elementValue" />
    <result column="DEFAULT_VALUE" jdbcType="VARCHAR" property="defaultValue" />
    <result column="ATTRIBURE1" jdbcType="VARCHAR" property="attribure1" />
    <result column="ATTRIBURE2" jdbcType="VARCHAR" property="attribure2" />
    <result column="ATTRIBURE3" jdbcType="VARCHAR" property="attribure3" />
    <result column="ATTRIBURE4" jdbcType="VARCHAR" property="attribure4" />
    <result column="ATTRIBURE5" jdbcType="VARCHAR" property="attribure5" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ELEMENT_VALUE_ID, TASK_ID, ELEMENT_NAME, ELEMENT_DESC, ELEMENT_VALUE, DEFAULT_VALUE, 
    ATTRIBURE1, ATTRIBURE2, ATTRIBURE3, ATTRIBURE4, ATTRIBURE5
  </sql>
  <select id="selectByExample" parameterType="autotest.com.bocom.entity.DataApplyElementValueExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from DATA_APPLY_ELEMENT_VALUE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from DATA_APPLY_ELEMENT_VALUE
    where ELEMENT_VALUE_ID = #{elementValueId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from DATA_APPLY_ELEMENT_VALUE
    where ELEMENT_VALUE_ID = #{elementValueId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="autotest.com.bocom.entity.DataApplyElementValueExample">
    delete from DATA_APPLY_ELEMENT_VALUE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="autotest.com.bocom.entity.DataApplyElementValue">
    insert into DATA_APPLY_ELEMENT_VALUE (ELEMENT_VALUE_ID, TASK_ID, ELEMENT_NAME, 
      ELEMENT_DESC, ELEMENT_VALUE, DEFAULT_VALUE, 
      ATTRIBURE1, ATTRIBURE2, ATTRIBURE3, 
      ATTRIBURE4, ATTRIBURE5)
    values (#{elementValueId,jdbcType=INTEGER}, #{taskId,jdbcType=INTEGER}, #{elementName,jdbcType=VARCHAR}, 
      #{elementDesc,jdbcType=VARCHAR}, #{elementValue,jdbcType=VARCHAR}, #{defaultValue,jdbcType=VARCHAR}, 
      #{attribure1,jdbcType=VARCHAR}, #{attribure2,jdbcType=VARCHAR}, #{attribure3,jdbcType=VARCHAR}, 
      #{attribure4,jdbcType=VARCHAR}, #{attribure5,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="autotest.com.bocom.entity.DataApplyElementValue">
    insert into DATA_APPLY_ELEMENT_VALUE
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="elementValueId != null">
        ELEMENT_VALUE_ID,
      </if>
      <if test="taskId != null">
        TASK_ID,
      </if>
      <if test="elementName != null">
        ELEMENT_NAME,
      </if>
      <if test="elementDesc != null">
        ELEMENT_DESC,
      </if>
      <if test="elementValue != null">
        ELEMENT_VALUE,
      </if>
      <if test="defaultValue != null">
        DEFAULT_VALUE,
      </if>
      <if test="attribure1 != null">
        ATTRIBURE1,
      </if>
      <if test="attribure2 != null">
        ATTRIBURE2,
      </if>
      <if test="attribure3 != null">
        ATTRIBURE3,
      </if>
      <if test="attribure4 != null">
        ATTRIBURE4,
      </if>
      <if test="attribure5 != null">
        ATTRIBURE5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="elementValueId != null">
        #{elementValueId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="elementName != null">
        #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementDesc != null">
        #{elementDesc,jdbcType=VARCHAR},
      </if>
      <if test="elementValue != null">
        #{elementValue,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="attribure1 != null">
        #{attribure1,jdbcType=VARCHAR},
      </if>
      <if test="attribure2 != null">
        #{attribure2,jdbcType=VARCHAR},
      </if>
      <if test="attribure3 != null">
        #{attribure3,jdbcType=VARCHAR},
      </if>
      <if test="attribure4 != null">
        #{attribure4,jdbcType=VARCHAR},
      </if>
      <if test="attribure5 != null">
        #{attribure5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="autotest.com.bocom.entity.DataApplyElementValueExample" resultType="java.lang.Long">
    select count(*) from DATA_APPLY_ELEMENT_VALUE
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DATA_APPLY_ELEMENT_VALUE
    <set>
      <if test="record.elementValueId != null">
        ELEMENT_VALUE_ID = #{record.elementValueId,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        TASK_ID = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.elementName != null">
        ELEMENT_NAME = #{record.elementName,jdbcType=VARCHAR},
      </if>
      <if test="record.elementDesc != null">
        ELEMENT_DESC = #{record.elementDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.elementValue != null">
        ELEMENT_VALUE = #{record.elementValue,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultValue != null">
        DEFAULT_VALUE = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.attribure1 != null">
        ATTRIBURE1 = #{record.attribure1,jdbcType=VARCHAR},
      </if>
      <if test="record.attribure2 != null">
        ATTRIBURE2 = #{record.attribure2,jdbcType=VARCHAR},
      </if>
      <if test="record.attribure3 != null">
        ATTRIBURE3 = #{record.attribure3,jdbcType=VARCHAR},
      </if>
      <if test="record.attribure4 != null">
        ATTRIBURE4 = #{record.attribure4,jdbcType=VARCHAR},
      </if>
      <if test="record.attribure5 != null">
        ATTRIBURE5 = #{record.attribure5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DATA_APPLY_ELEMENT_VALUE
    set ELEMENT_VALUE_ID = #{record.elementValueId,jdbcType=INTEGER},
      TASK_ID = #{record.taskId,jdbcType=INTEGER},
      ELEMENT_NAME = #{record.elementName,jdbcType=VARCHAR},
      ELEMENT_DESC = #{record.elementDesc,jdbcType=VARCHAR},
      ELEMENT_VALUE = #{record.elementValue,jdbcType=VARCHAR},
      DEFAULT_VALUE = #{record.defaultValue,jdbcType=VARCHAR},
      ATTRIBURE1 = #{record.attribure1,jdbcType=VARCHAR},
      ATTRIBURE2 = #{record.attribure2,jdbcType=VARCHAR},
      ATTRIBURE3 = #{record.attribure3,jdbcType=VARCHAR},
      ATTRIBURE4 = #{record.attribure4,jdbcType=VARCHAR},
      ATTRIBURE5 = #{record.attribure5,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="autotest.com.bocom.entity.DataApplyElementValue">
    update DATA_APPLY_ELEMENT_VALUE
    <set>
      <if test="taskId != null">
        TASK_ID = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="elementName != null">
        ELEMENT_NAME = #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementDesc != null">
        ELEMENT_DESC = #{elementDesc,jdbcType=VARCHAR},
      </if>
      <if test="elementValue != null">
        ELEMENT_VALUE = #{elementValue,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        DEFAULT_VALUE = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="attribure1 != null">
        ATTRIBURE1 = #{attribure1,jdbcType=VARCHAR},
      </if>
      <if test="attribure2 != null">
        ATTRIBURE2 = #{attribure2,jdbcType=VARCHAR},
      </if>
      <if test="attribure3 != null">
        ATTRIBURE3 = #{attribure3,jdbcType=VARCHAR},
      </if>
      <if test="attribure4 != null">
        ATTRIBURE4 = #{attribure4,jdbcType=VARCHAR},
      </if>
      <if test="attribure5 != null">
        ATTRIBURE5 = #{attribure5,jdbcType=VARCHAR},
      </if>
    </set>
    where ELEMENT_VALUE_ID = #{elementValueId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="autotest.com.bocom.entity.DataApplyElementValue">
    update DATA_APPLY_ELEMENT_VALUE
    set TASK_ID = #{taskId,jdbcType=INTEGER},
      ELEMENT_NAME = #{elementName,jdbcType=VARCHAR},
      ELEMENT_DESC = #{elementDesc,jdbcType=VARCHAR},
      ELEMENT_VALUE = #{elementValue,jdbcType=VARCHAR},
      DEFAULT_VALUE = #{defaultValue,jdbcType=VARCHAR},
      ATTRIBURE1 = #{attribure1,jdbcType=VARCHAR},
      ATTRIBURE2 = #{attribure2,jdbcType=VARCHAR},
      ATTRIBURE3 = #{attribure3,jdbcType=VARCHAR},
      ATTRIBURE4 = #{attribure4,jdbcType=VARCHAR},
      ATTRIBURE5 = #{attribure5,jdbcType=VARCHAR}
    where ELEMENT_VALUE_ID = #{elementValueId,jdbcType=INTEGER}
  </update>
</mapper>