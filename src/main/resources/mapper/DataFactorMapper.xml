<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="autotest.com.bocom.dao.DataFactorMapper">
  <resultMap id="BaseResultMap" type="autotest.com.bocom.entity.DataFactor">
    <id column="ELEMENT_ID" jdbcType="INTEGER" property="elementId" />
    <result column="SOLUTION_ID" jdbcType="INTEGER" property="solutionId" />
    <result column="PRODUCT_ID" jdbcType="INTEGER" property="productId" />
    <result column="ELEMENT_NAME" jdbcType="VARCHAR" property="elementName" />
    <result column="ELEMENT_DESC" jdbcType="VARCHAR" property="elementDesc" />
    <result column="STEP_ID" jdbcType="INTEGER" property="stepId" />
    <result column="ELEMENT_TYPE" jdbcType="CHAR" property="elementType" />
    <result column="REFERENCE_VALUE" jdbcType="VARCHAR" property="referenceValue" />
    <result column="ACTUAL_VALUE" jdbcType="VARCHAR" property="actualValue" />
    <result column="DEFAULT_VALUE" jdbcType="VARCHAR" property="defaultValue" />
    <result column="ATTRIBUTE1" jdbcType="VARCHAR" property="attribute1" />
    <result column="ATTRIBUTE2" jdbcType="VARCHAR" property="attribute2" />
    <result column="ATTRIBUTE3" jdbcType="VARCHAR" property="attribute3" />
    <result column="ATTRIBUTE4" jdbcType="VARCHAR" property="attribute4" />
    <result column="ATTRIBUTE5" jdbcType="VARCHAR" property="attribute5" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ELEMENT_ID, SOLUTION_ID, PRODUCT_ID, ELEMENT_NAME, ELEMENT_DESC, STEP_ID, ELEMENT_TYPE, 
    REFERENCE_VALUE, ACTUAL_VALUE, DEFAULT_VALUE, ATTRIBUTE1, ATTRIBUTE2, ATTRIBUTE3, 
    ATTRIBUTE4, ATTRIBUTE5
  </sql>
  <select id="selectByExample" parameterType="autotest.com.bocom.entity.DataFactorExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from DATA_FACTOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from DATA_FACTOR
    where ELEMENT_ID = #{elementId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from DATA_FACTOR
    where ELEMENT_ID = #{elementId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="autotest.com.bocom.entity.DataFactorExample">
    delete from DATA_FACTOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="autotest.com.bocom.entity.DataFactor">
    insert into DATA_FACTOR (ELEMENT_ID, SOLUTION_ID, PRODUCT_ID, 
      ELEMENT_NAME, ELEMENT_DESC, STEP_ID, 
      ELEMENT_TYPE, REFERENCE_VALUE, ACTUAL_VALUE, 
      DEFAULT_VALUE, ATTRIBUTE1, ATTRIBUTE2, 
      ATTRIBUTE3, ATTRIBUTE4, ATTRIBUTE5
      )
    values (#{elementId,jdbcType=INTEGER}, #{solutionId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, 
      #{elementName,jdbcType=VARCHAR}, #{elementDesc,jdbcType=VARCHAR}, #{stepId,jdbcType=INTEGER}, 
      #{elementType,jdbcType=CHAR}, #{referenceValue,jdbcType=VARCHAR}, #{actualValue,jdbcType=VARCHAR}, 
      #{defaultValue,jdbcType=VARCHAR}, #{attribute1,jdbcType=VARCHAR}, #{attribute2,jdbcType=VARCHAR}, 
      #{attribute3,jdbcType=VARCHAR}, #{attribute4,jdbcType=VARCHAR}, #{attribute5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="autotest.com.bocom.entity.DataFactor">
    insert into DATA_FACTOR
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="elementId != null">
        ELEMENT_ID,
      </if>
      <if test="solutionId != null">
        SOLUTION_ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="elementName != null">
        ELEMENT_NAME,
      </if>
      <if test="elementDesc != null">
        ELEMENT_DESC,
      </if>
      <if test="stepId != null">
        STEP_ID,
      </if>
      <if test="elementType != null">
        ELEMENT_TYPE,
      </if>
      <if test="referenceValue != null">
        REFERENCE_VALUE,
      </if>
      <if test="actualValue != null">
        ACTUAL_VALUE,
      </if>
      <if test="defaultValue != null">
        DEFAULT_VALUE,
      </if>
      <if test="attribute1 != null">
        ATTRIBUTE1,
      </if>
      <if test="attribute2 != null">
        ATTRIBUTE2,
      </if>
      <if test="attribute3 != null">
        ATTRIBUTE3,
      </if>
      <if test="attribute4 != null">
        ATTRIBUTE4,
      </if>
      <if test="attribute5 != null">
        ATTRIBUTE5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="elementId != null">
        #{elementId,jdbcType=INTEGER},
      </if>
      <if test="solutionId != null">
        #{solutionId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="elementName != null">
        #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementDesc != null">
        #{elementDesc,jdbcType=VARCHAR},
      </if>
      <if test="stepId != null">
        #{stepId,jdbcType=INTEGER},
      </if>
      <if test="elementType != null">
        #{elementType,jdbcType=CHAR},
      </if>
      <if test="referenceValue != null">
        #{referenceValue,jdbcType=VARCHAR},
      </if>
      <if test="actualValue != null">
        #{actualValue,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="attribute1 != null">
        #{attribute1,jdbcType=VARCHAR},
      </if>
      <if test="attribute2 != null">
        #{attribute2,jdbcType=VARCHAR},
      </if>
      <if test="attribute3 != null">
        #{attribute3,jdbcType=VARCHAR},
      </if>
      <if test="attribute4 != null">
        #{attribute4,jdbcType=VARCHAR},
      </if>
      <if test="attribute5 != null">
        #{attribute5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="autotest.com.bocom.entity.DataFactorExample" resultType="java.lang.Long">
    select count(*) from DATA_FACTOR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DATA_FACTOR
    <set>
      <if test="record.elementId != null">
        ELEMENT_ID = #{record.elementId,jdbcType=INTEGER},
      </if>
      <if test="record.solutionId != null">
        SOLUTION_ID = #{record.solutionId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        PRODUCT_ID = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.elementName != null">
        ELEMENT_NAME = #{record.elementName,jdbcType=VARCHAR},
      </if>
      <if test="record.elementDesc != null">
        ELEMENT_DESC = #{record.elementDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.stepId != null">
        STEP_ID = #{record.stepId,jdbcType=INTEGER},
      </if>
      <if test="record.elementType != null">
        ELEMENT_TYPE = #{record.elementType,jdbcType=CHAR},
      </if>
      <if test="record.referenceValue != null">
        REFERENCE_VALUE = #{record.referenceValue,jdbcType=VARCHAR},
      </if>
      <if test="record.actualValue != null">
        ACTUAL_VALUE = #{record.actualValue,jdbcType=VARCHAR},
      </if>
      <if test="record.defaultValue != null">
        DEFAULT_VALUE = #{record.defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="record.attribute1 != null">
        ATTRIBUTE1 = #{record.attribute1,jdbcType=VARCHAR},
      </if>
      <if test="record.attribute2 != null">
        ATTRIBUTE2 = #{record.attribute2,jdbcType=VARCHAR},
      </if>
      <if test="record.attribute3 != null">
        ATTRIBUTE3 = #{record.attribute3,jdbcType=VARCHAR},
      </if>
      <if test="record.attribute4 != null">
        ATTRIBUTE4 = #{record.attribute4,jdbcType=VARCHAR},
      </if>
      <if test="record.attribute5 != null">
        ATTRIBUTE5 = #{record.attribute5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DATA_FACTOR
    set ELEMENT_ID = #{record.elementId,jdbcType=INTEGER},
      SOLUTION_ID = #{record.solutionId,jdbcType=INTEGER},
      PRODUCT_ID = #{record.productId,jdbcType=INTEGER},
      ELEMENT_NAME = #{record.elementName,jdbcType=VARCHAR},
      ELEMENT_DESC = #{record.elementDesc,jdbcType=VARCHAR},
      STEP_ID = #{record.stepId,jdbcType=INTEGER},
      ELEMENT_TYPE = #{record.elementType,jdbcType=CHAR},
      REFERENCE_VALUE = #{record.referenceValue,jdbcType=VARCHAR},
      ACTUAL_VALUE = #{record.actualValue,jdbcType=VARCHAR},
      DEFAULT_VALUE = #{record.defaultValue,jdbcType=VARCHAR},
      ATTRIBUTE1 = #{record.attribute1,jdbcType=VARCHAR},
      ATTRIBUTE2 = #{record.attribute2,jdbcType=VARCHAR},
      ATTRIBUTE3 = #{record.attribute3,jdbcType=VARCHAR},
      ATTRIBUTE4 = #{record.attribute4,jdbcType=VARCHAR},
      ATTRIBUTE5 = #{record.attribute5,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="autotest.com.bocom.entity.DataFactor">
    update DATA_FACTOR
    <set>
      <if test="solutionId != null">
        SOLUTION_ID = #{solutionId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=INTEGER},
      </if>
      <if test="elementName != null">
        ELEMENT_NAME = #{elementName,jdbcType=VARCHAR},
      </if>
      <if test="elementDesc != null">
        ELEMENT_DESC = #{elementDesc,jdbcType=VARCHAR},
      </if>
      <if test="stepId != null">
        STEP_ID = #{stepId,jdbcType=INTEGER},
      </if>
      <if test="elementType != null">
        ELEMENT_TYPE = #{elementType,jdbcType=CHAR},
      </if>
      <if test="referenceValue != null">
        REFERENCE_VALUE = #{referenceValue,jdbcType=VARCHAR},
      </if>
      <if test="actualValue != null">
        ACTUAL_VALUE = #{actualValue,jdbcType=VARCHAR},
      </if>
      <if test="defaultValue != null">
        DEFAULT_VALUE = #{defaultValue,jdbcType=VARCHAR},
      </if>
      <if test="attribute1 != null">
        ATTRIBUTE1 = #{attribute1,jdbcType=VARCHAR},
      </if>
      <if test="attribute2 != null">
        ATTRIBUTE2 = #{attribute2,jdbcType=VARCHAR},
      </if>
      <if test="attribute3 != null">
        ATTRIBUTE3 = #{attribute3,jdbcType=VARCHAR},
      </if>
      <if test="attribute4 != null">
        ATTRIBUTE4 = #{attribute4,jdbcType=VARCHAR},
      </if>
      <if test="attribute5 != null">
        ATTRIBUTE5 = #{attribute5,jdbcType=VARCHAR},
      </if>
    </set>
    where ELEMENT_ID = #{elementId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="autotest.com.bocom.entity.DataFactor">
    update DATA_FACTOR
    set SOLUTION_ID = #{solutionId,jdbcType=INTEGER},
      PRODUCT_ID = #{productId,jdbcType=INTEGER},
      ELEMENT_NAME = #{elementName,jdbcType=VARCHAR},
      ELEMENT_DESC = #{elementDesc,jdbcType=VARCHAR},
      STEP_ID = #{stepId,jdbcType=INTEGER},
      ELEMENT_TYPE = #{elementType,jdbcType=CHAR},
      REFERENCE_VALUE = #{referenceValue,jdbcType=VARCHAR},
      ACTUAL_VALUE = #{actualValue,jdbcType=VARCHAR},
      DEFAULT_VALUE = #{defaultValue,jdbcType=VARCHAR},
      ATTRIBUTE1 = #{attribute1,jdbcType=VARCHAR},
      ATTRIBUTE2 = #{attribute2,jdbcType=VARCHAR},
      ATTRIBUTE3 = #{attribute3,jdbcType=VARCHAR},
      ATTRIBUTE4 = #{attribute4,jdbcType=VARCHAR},
      ATTRIBUTE5 = #{attribute5,jdbcType=VARCHAR}
    where ELEMENT_ID = #{elementId,jdbcType=INTEGER}
  </update>
</mapper>