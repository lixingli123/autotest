<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="autotest.com.bocom.dao.DataHistoryMapper">
  <resultMap id="BaseResultMap" type="autotest.com.bocom.entity.DataHistory">
    <id column="HISTORY_ID" jdbcType="INTEGER" property="historyId" />
    <result column="PRODUCT_ID" jdbcType="INTEGER" property="productId" />
    <result column="USER_ID" jdbcType="INTEGER" property="userId" />
    <result column="TASK_ID" jdbcType="INTEGER" property="taskId" />
    <result column="DATA_ID" jdbcType="INTEGER" property="dataId" />
    <result column="CASE_ID" jdbcType="INTEGER" property="caseId" />
    <result column="USE_TIME" jdbcType="TIMESTAMP" property="useTime" />
    <result column="ATTRIBURE1" jdbcType="VARCHAR" property="attribure1" />
    <result column="ATTRIBURE2" jdbcType="VARCHAR" property="attribure2" />
    <result column="ATTRIBURE3" jdbcType="VARCHAR" property="attribure3" />
    <result column="ATTRIBURE4" jdbcType="VARCHAR" property="attribure4" />
    <result column="ATTRIBURE5" jdbcType="VARCHAR" property="attribure5" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    HISTORY_ID, PRODUCT_ID, USER_ID, TASK_ID, DATA_ID, CASE_ID, USE_TIME, ATTRIBURE1, 
    ATTRIBURE2, ATTRIBURE3, ATTRIBURE4, ATTRIBURE5
  </sql>
  <select id="selectByExample" parameterType="autotest.com.bocom.entity.DataHistoryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from DATA_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from DATA_HISTORY
    where HISTORY_ID = #{historyId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from DATA_HISTORY
    where HISTORY_ID = #{historyId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="autotest.com.bocom.entity.DataHistoryExample">
    delete from DATA_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="autotest.com.bocom.entity.DataHistory">
    insert into DATA_HISTORY (HISTORY_ID, PRODUCT_ID, USER_ID, 
      TASK_ID, DATA_ID, CASE_ID, 
      USE_TIME, ATTRIBURE1, ATTRIBURE2, 
      ATTRIBURE3, ATTRIBURE4, ATTRIBURE5
      )
    values (#{historyId,jdbcType=INTEGER}, #{productId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, 
      #{taskId,jdbcType=INTEGER}, #{dataId,jdbcType=INTEGER}, #{caseId,jdbcType=INTEGER}, 
      #{useTime,jdbcType=TIMESTAMP}, #{attribure1,jdbcType=VARCHAR}, #{attribure2,jdbcType=VARCHAR}, 
      #{attribure3,jdbcType=VARCHAR}, #{attribure4,jdbcType=VARCHAR}, #{attribure5,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="autotest.com.bocom.entity.DataHistory">
    insert into DATA_HISTORY
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="historyId != null">
        HISTORY_ID,
      </if>
      <if test="productId != null">
        PRODUCT_ID,
      </if>
      <if test="userId != null">
        USER_ID,
      </if>
      <if test="taskId != null">
        TASK_ID,
      </if>
      <if test="dataId != null">
        DATA_ID,
      </if>
      <if test="caseId != null">
        CASE_ID,
      </if>
      <if test="useTime != null">
        USE_TIME,
      </if>
      <if test="attribure1 != null">
        ATTRIBURE1,
      </if>
      <if test="attribure2 != null">
        ATTRIBURE2,
      </if>
      <if test="attribure3 != null">
        ATTRIBURE3,
      </if>
      <if test="attribure4 != null">
        ATTRIBURE4,
      </if>
      <if test="attribure5 != null">
        ATTRIBURE5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="historyId != null">
        #{historyId,jdbcType=INTEGER},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        #{taskId,jdbcType=INTEGER},
      </if>
      <if test="dataId != null">
        #{dataId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        #{caseId,jdbcType=INTEGER},
      </if>
      <if test="useTime != null">
        #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attribure1 != null">
        #{attribure1,jdbcType=VARCHAR},
      </if>
      <if test="attribure2 != null">
        #{attribure2,jdbcType=VARCHAR},
      </if>
      <if test="attribure3 != null">
        #{attribure3,jdbcType=VARCHAR},
      </if>
      <if test="attribure4 != null">
        #{attribure4,jdbcType=VARCHAR},
      </if>
      <if test="attribure5 != null">
        #{attribure5,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="autotest.com.bocom.entity.DataHistoryExample" resultType="java.lang.Long">
    select count(*) from DATA_HISTORY
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update DATA_HISTORY
    <set>
      <if test="record.historyId != null">
        HISTORY_ID = #{record.historyId,jdbcType=INTEGER},
      </if>
      <if test="record.productId != null">
        PRODUCT_ID = #{record.productId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        USER_ID = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.taskId != null">
        TASK_ID = #{record.taskId,jdbcType=INTEGER},
      </if>
      <if test="record.dataId != null">
        DATA_ID = #{record.dataId,jdbcType=INTEGER},
      </if>
      <if test="record.caseId != null">
        CASE_ID = #{record.caseId,jdbcType=INTEGER},
      </if>
      <if test="record.useTime != null">
        USE_TIME = #{record.useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.attribure1 != null">
        ATTRIBURE1 = #{record.attribure1,jdbcType=VARCHAR},
      </if>
      <if test="record.attribure2 != null">
        ATTRIBURE2 = #{record.attribure2,jdbcType=VARCHAR},
      </if>
      <if test="record.attribure3 != null">
        ATTRIBURE3 = #{record.attribure3,jdbcType=VARCHAR},
      </if>
      <if test="record.attribure4 != null">
        ATTRIBURE4 = #{record.attribure4,jdbcType=VARCHAR},
      </if>
      <if test="record.attribure5 != null">
        ATTRIBURE5 = #{record.attribure5,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update DATA_HISTORY
    set HISTORY_ID = #{record.historyId,jdbcType=INTEGER},
      PRODUCT_ID = #{record.productId,jdbcType=INTEGER},
      USER_ID = #{record.userId,jdbcType=INTEGER},
      TASK_ID = #{record.taskId,jdbcType=INTEGER},
      DATA_ID = #{record.dataId,jdbcType=INTEGER},
      CASE_ID = #{record.caseId,jdbcType=INTEGER},
      USE_TIME = #{record.useTime,jdbcType=TIMESTAMP},
      ATTRIBURE1 = #{record.attribure1,jdbcType=VARCHAR},
      ATTRIBURE2 = #{record.attribure2,jdbcType=VARCHAR},
      ATTRIBURE3 = #{record.attribure3,jdbcType=VARCHAR},
      ATTRIBURE4 = #{record.attribure4,jdbcType=VARCHAR},
      ATTRIBURE5 = #{record.attribure5,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="autotest.com.bocom.entity.DataHistory">
    update DATA_HISTORY
    <set>
      <if test="productId != null">
        PRODUCT_ID = #{productId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        USER_ID = #{userId,jdbcType=INTEGER},
      </if>
      <if test="taskId != null">
        TASK_ID = #{taskId,jdbcType=INTEGER},
      </if>
      <if test="dataId != null">
        DATA_ID = #{dataId,jdbcType=INTEGER},
      </if>
      <if test="caseId != null">
        CASE_ID = #{caseId,jdbcType=INTEGER},
      </if>
      <if test="useTime != null">
        USE_TIME = #{useTime,jdbcType=TIMESTAMP},
      </if>
      <if test="attribure1 != null">
        ATTRIBURE1 = #{attribure1,jdbcType=VARCHAR},
      </if>
      <if test="attribure2 != null">
        ATTRIBURE2 = #{attribure2,jdbcType=VARCHAR},
      </if>
      <if test="attribure3 != null">
        ATTRIBURE3 = #{attribure3,jdbcType=VARCHAR},
      </if>
      <if test="attribure4 != null">
        ATTRIBURE4 = #{attribure4,jdbcType=VARCHAR},
      </if>
      <if test="attribure5 != null">
        ATTRIBURE5 = #{attribure5,jdbcType=VARCHAR},
      </if>
    </set>
    where HISTORY_ID = #{historyId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="autotest.com.bocom.entity.DataHistory">
    update DATA_HISTORY
    set PRODUCT_ID = #{productId,jdbcType=INTEGER},
      USER_ID = #{userId,jdbcType=INTEGER},
      TASK_ID = #{taskId,jdbcType=INTEGER},
      DATA_ID = #{dataId,jdbcType=INTEGER},
      CASE_ID = #{caseId,jdbcType=INTEGER},
      USE_TIME = #{useTime,jdbcType=TIMESTAMP},
      ATTRIBURE1 = #{attribure1,jdbcType=VARCHAR},
      ATTRIBURE2 = #{attribure2,jdbcType=VARCHAR},
      ATTRIBURE3 = #{attribure3,jdbcType=VARCHAR},
      ATTRIBURE4 = #{attribure4,jdbcType=VARCHAR},
      ATTRIBURE5 = #{attribure5,jdbcType=VARCHAR}
    where HISTORY_ID = #{historyId,jdbcType=INTEGER}
  </update>
</mapper>